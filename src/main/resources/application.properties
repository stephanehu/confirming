#Change server port
server.port = 8050

#Disable Thymeleaf caching for development, should be enabled for production
#spring.thymeleaf.cache=false
#spring.thymeleaf.suffix= .html
#logging.level.org.thymeleaf=TRACE


spring.datasource.url = jdbc:mysql://localhost:3306/refactoring?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username = root
spring.datasource.password = admin



# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.database = MYSQL
spring.jpa.hibernate.ddl-auto = update

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

logging.level.org.springframework.web: DEBUG
logging.level.org.springframework.security: DEBUG
#logging.level.org.springframework: DEBUG
#logging.level.org.hibernate: DEBUG


## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/Users/mkgm/uploads